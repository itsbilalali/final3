name: Auto Merge Specific PR to Main

on:
  pull_request_target:
    types:
      - labeled

jobs:
  merge-pr-to-main:
    if: github.event.label.name == 'tested' && github.event.pull_request.merged == true
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Fetch all branches and history
        run: git fetch --all

      - name: Get PR SHA and Branch Name
        id: pr_details
        run: |
          echo "PR_SHA=$(git rev-parse HEAD)" >> $GITHUB_ENV
          echo "BRANCH_NAME=${{ github.event.pull_request.head.ref }}" >> $GITHUB_ENV

      - name: Create a new branch from the specific PR commit
        run: |
          git checkout -b pr-to-main-${{ env.PR_SHA }}

      - name: Push branch to remote
        run: git push origin pr-to-main-${{ env.PR_SHA }}

      - name: Create Pull Request from the PR commit to main
        id: create_pr
        env: 
          GH_TOKEN: ${{ secrets.MY_GH_TOKEN }}
        run: |
          gh pr create --base main --head pr-to-main-${{ env.PR_SHA }} --title "Auto Merge: ${{ env.BRANCH_NAME }} to Main" --body "Automated PR to merge changes from ${{ env.BRANCH_NAME }} to main after passing QA."

      - name: Auto Merge the new Pull Request
        env:
          GH_TOKEN: ${{ secrets.MY_GH_TOKEN }}
        run: |
          gh pr merge pr-to-main-${{ env.PR_SHA }} --auto --squash --delete-branch

      - name: Comment on original PR
        uses: actions/github-script@v6
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: ${{ github.event.pull_request.number }},
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: "A new pull request has been automatically created and merged to main."
            })